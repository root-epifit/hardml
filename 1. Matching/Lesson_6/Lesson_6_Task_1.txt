Это домашнее задание предлагает вам собственноручно реализовать построение SW-графа и алгоритм навигации по нему с целью поиска точек, наиболее похожих на заданную (NSW).

Метод distance рассчитывает Евклидово (L 
2
​
 ) расстояние от точки pointA (вектор размера 1∗D, где D — размерность эмбеддинга) до всех объектов во множестве documents (матрица размера N∗D, где N — количество документов). Выходная размерность — N*1.

Метод create_sw_graph должен создавать граф связей в множестве документов data (матрица размеров N∗D) на основе следующих параметров:

num_candidates_for_choice_long — количество кандидатов, являющихся самыми далекими объектами, из которых случайно выбирается num_edges_long штук для построения рёбер графа. То есть сначала для каждой точки по честному рассчитываются самые дальние точки, после чего отбирается топ самых далёких, и уже из их числа происходит семплирование. Для коротких рёбер аналогичные параметры num_candidates_for_choice_short и num_edges_short.

Для расчёта на больших выборках можно использовать семплинг (задаётся параметром use_sampling), т.е. вместо расчёта расстояний до всех точек рассчитывается лишь доля расстояний (равная sampling_share, к примеру sampling_share=0.01 для 10 миллионов документов означает, что для каждой точки случайно выбирается 10 тыс. точек, и лишь из их числа выбираются самые близкие и дальние). Корректность работы use_sampling=True проверяться не будет, на сервере используется маленькая выборка для быстроты оценки решения — так что можете реализовать это для себя, если вам это интересно. dist_f — функция расчёта расстояния от точки до набора точек, в рамках данной работы используется ранее упомянутая функция distance.

Функция create_sw_graph возвращает словарь, где ключ — индекс точки (и количество ключей равно количеству точек N), а значение — список индексов точек, которыми образованы связи в виде рёбер (длинных и коротких совместно, без разделения).

И непосредственно функция nsw, осуществляющая поиск в графе. Аргументы query_point и all_documents аналогичны аргументам функции distance.

Здесь query_point — это целевая точка, к которой нужно искать ближайших соседей в SW-графе среди всех документов. На вход в аргумент graph_edges поступает результат работы метода create_sw_graph, т.е. указание всех рёбер в графе.

search_k означает количество соседей, которое необходимо вернуть, num_start_points — количество случайно выбранных стартовых точек для расчётов. Обратите внимание, что всегда должно возвращаться  search_k объектов. Возможно, в некоторых случаях потребуется начать с более чем num_start_points точек. Результат работы метода nsw — список индексов search_k ближайших к query_point объектов среди all_documents. Размерность возвращаемого значения — K.